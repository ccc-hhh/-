#多维尺度分析试图寻找原始高维空间数据的距离的良好低维表征。

#简单来说，多维尺度分析被用于数据的相似性，它试图用几何空间中的距离来建模数据的相似性，即用二维空间中的距离来表示高维空间的关系。

#数据可以是物体之间的相似度、分子之间的交互频率或国家间交易指数，而且是基于欧式距离的距离矩阵。

#多维尺度分析算法是一个不断迭代的过程，因此，需要使用max_iter来指定较大迭代次数，同时计算的耗时也是上面算法中较大的一个。


from sklearn import manifold
from sklearn.metrics import euclidean_distances
import pandas as pd


similarities = euclidean_distances(data.ix[:,:-1].values)
mds = manifold.MDS(n_components=2, max_iter=3000, eps=1e-9, dissimilarity="precomputed", n_jobs=1)
X = mds.fit(similarities).embedding_
pos=pd.DataFrame(X, columns=['X', 'Y'])
pos['species'] = data['species']
ax = pos.ix[pos['species']=='virginica'].
plot(kind='scatter', x='X', y='Y', color='blue', label='virginica')
ax = pos.ix[pos['species']=='setosa'].
plot(kind='scatter', x='X', y='Y', color='green', label='setosa', ax=ax)
pos.ix[pos['species']=='versicolor'].
plot(kind='scatter', x='X', y='Y', color='red', label='versicolor', ax=ax)
